syntax = "proto3";

package hall.v1;

import "common/v1/types.proto";

enum Route {
  ROUTE_UNSPECIFIED = 0; // 无效路由

  // 核心相关路由[1000, 1100)
  ROUTE_LOGIN = 1000; // 登录
  ROUTE_FETCH_PLAYER_PROFILE = 1001; // 获取玩家信息
  ROUTE_FETCH_PLAYER_ATTRS = 1002; // 获取玩家属性

  // 背包相关路由[1100, 1200)
  ROUTE_FETCH_PLAYER_ITEMS = 1100; // 获取玩家道具背包
  ROUTE_FETCH_PLAYER_EQUIPMENTS = 1101; // 获取玩家装备背包
}

// ------------------------- Core Service -------------------------

service CoreService {
  rpc Login(LoginReq) returns (LoginResp); // 登录
  rpc FetchPlayerProfile(FetchPlayerProfileReq) returns (FetchPlayerProfileResp); // 获取玩家信息
  rpc FetchPlayerAttrs(FetchPlayerAttrsReq) returns (FetchPlayerAttrsResp); // 获取玩家属性
}

message LoginReq {
  uint64 server_id = 1; // 服务器id
  string access_token = 2; // 访问凭据
}
message LoginResp {}

message FetchPlayerProfileReq {}
message FetchPlayerProfileResp {
  string nickname = 1; // 名称
  string avatar = 2; // 头像
  uint64 level = 3; // 等级
  repeated common.v1.ItemStack assets = 4; // 资产
}

message FetchPlayerAttrsReq {}
message FetchPlayerAttrsResp {
  map<uint32, common.v1.Attr> attrs = 1; // 属性
  repeated common.v1.Equipment equipments = 2; // 装备列表
}

// ------------------------- Inventory Service -------------------------

service InventoryService {
  rpc FetchPlayerItems(FetchPlayerItemsReq) returns (FetchPlayerItemsResp); // 获取玩家道具背包
  rpc FetchPlayerEquipments(FetchPlayerEquipmentsReq) returns (FetchPlayerEquipmentsResp); // 获取玩家装备背包
}

message FetchPlayerItemsReq {}
message FetchPlayerItemsResp {
  repeated common.v1.ItemStack items = 1; // 道具列表
}

message FetchPlayerEquipmentsReq {}
message FetchPlayerEquipmentsResp {
  repeated common.v1.Equipment equipments = 1; // 装备列表
}
