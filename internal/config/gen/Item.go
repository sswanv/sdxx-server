
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;


import "errors"

type Item struct {
    Id int32
    Name string
    Icon string
    Tips string
    ItemType int32
    ItemSubclass int32
    SortWeight int32
    Quality int32
    ItemLv int32
    SellPrice int32
    NumberLimit int32
    Parameter int32
    Use int32
    EquipmentProperty int32
}

const TypeId_Item = 2289459

func (*Item) GetTypeId() int32 {
    return 2289459
}

func NewItem(_buf map[string]interface{}) (_v *Item, err error) {
    _v = &Item{}
    { var _ok_ bool; var __json_id__ interface{}; if __json_id__, _ok_ = _buf["id"]; !_ok_ || __json_id__ == nil { err = errors.New("id error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_id__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.Id = __x__ }}
    { var _ok_ bool; var __json_name__ interface{}; if __json_name__, _ok_ = _buf["name"]; !_ok_ || __json_name__ == nil { err = errors.New("name error"); return } else { var __x__ string;  {  if __x__, _ok_ = __json_name__.(string); !_ok_ { err = errors.New("__x__ error"); return } }; _v.Name = __x__ }}
    { var _ok_ bool; var __json_icon__ interface{}; if __json_icon__, _ok_ = _buf["icon"]; !_ok_ || __json_icon__ == nil { err = errors.New("icon error"); return } else { var __x__ string;  {  if __x__, _ok_ = __json_icon__.(string); !_ok_ { err = errors.New("__x__ error"); return } }; _v.Icon = __x__ }}
    { var _ok_ bool; var __json_tips__ interface{}; if __json_tips__, _ok_ = _buf["tips"]; !_ok_ || __json_tips__ == nil { err = errors.New("tips error"); return } else { var __x__ string;  {  if __x__, _ok_ = __json_tips__.(string); !_ok_ { err = errors.New("__x__ error"); return } }; _v.Tips = __x__ }}
    { var _ok_ bool; var __json_item_type__ interface{}; if __json_item_type__, _ok_ = _buf["item_type"]; !_ok_ || __json_item_type__ == nil { err = errors.New("item_type error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_item_type__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.ItemType = __x__ }}
    { var _ok_ bool; var __json_item_subclass__ interface{}; if __json_item_subclass__, _ok_ = _buf["item_subclass"]; !_ok_ || __json_item_subclass__ == nil { err = errors.New("item_subclass error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_item_subclass__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.ItemSubclass = __x__ }}
    { var _ok_ bool; var __json_sort_weight__ interface{}; if __json_sort_weight__, _ok_ = _buf["sort_weight"]; !_ok_ || __json_sort_weight__ == nil { err = errors.New("sort_weight error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_sort_weight__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.SortWeight = __x__ }}
    { var _ok_ bool; var __json_quality__ interface{}; if __json_quality__, _ok_ = _buf["quality"]; !_ok_ || __json_quality__ == nil { err = errors.New("quality error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_quality__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.Quality = __x__ }}
    { var _ok_ bool; var __json_item_lv__ interface{}; if __json_item_lv__, _ok_ = _buf["item_lv"]; !_ok_ || __json_item_lv__ == nil { err = errors.New("item_lv error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_item_lv__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.ItemLv = __x__ }}
    { var _ok_ bool; var __json_sell_price__ interface{}; if __json_sell_price__, _ok_ = _buf["sell_price"]; !_ok_ || __json_sell_price__ == nil { err = errors.New("sell_price error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_sell_price__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.SellPrice = __x__ }}
    { var _ok_ bool; var __json_number_limit__ interface{}; if __json_number_limit__, _ok_ = _buf["number_limit"]; !_ok_ || __json_number_limit__ == nil { err = errors.New("number_limit error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_number_limit__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.NumberLimit = __x__ }}
    { var _ok_ bool; var __json_parameter__ interface{}; if __json_parameter__, _ok_ = _buf["parameter"]; !_ok_ || __json_parameter__ == nil { err = errors.New("parameter error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_parameter__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.Parameter = __x__ }}
    { var _ok_ bool; var __json_use__ interface{}; if __json_use__, _ok_ = _buf["use"]; !_ok_ || __json_use__ == nil { err = errors.New("use error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_use__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.Use = __x__ }}
    { var _ok_ bool; var __json_equipment_property__ interface{}; if __json_equipment_property__, _ok_ = _buf["equipment_property"]; !_ok_ || __json_equipment_property__ == nil { err = errors.New("equipment_property error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_equipment_property__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.EquipmentProperty = __x__ }}
    return
}

