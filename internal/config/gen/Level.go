
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;


import "errors"

type Level struct {
    Id int32
    Exp int32
    Property []*PriorityConsume
    StandardInsight int32
    StandardCritical int32
}

const TypeId_Level = 73313124

func (*Level) GetTypeId() int32 {
    return 73313124
}

func NewLevel(_buf map[string]interface{}) (_v *Level, err error) {
    _v = &Level{}
    { var _ok_ bool; var __json_id__ interface{}; if __json_id__, _ok_ = _buf["id"]; !_ok_ || __json_id__ == nil { err = errors.New("id error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_id__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.Id = __x__ }}
    { var _ok_ bool; var __json_exp__ interface{}; if __json_exp__, _ok_ = _buf["exp"]; !_ok_ || __json_exp__ == nil { err = errors.New("exp error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_exp__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.Exp = __x__ }}
    { var _ok_ bool; var __json_property__ interface{}; if __json_property__, _ok_ = _buf["property"]; !_ok_ || __json_property__ == nil { err = errors.New("property error"); return } else { var __x__ []*PriorityConsume;  {
                    var _arr0_ []interface{}
                    var _ok0_ bool
                    if _arr0_, _ok0_ = (__json_property__).([]interface{}); !_ok0_ { err = errors.New("__x__ error"); return }
    
                    __x__ = make([]*PriorityConsume, 0, len(_arr0_))
                    
                    for _, _e0_ := range _arr0_ {
                        var _list_v0_ *PriorityConsume
                        { var _ok_ bool; var _x_ map[string]interface{}; if _x_, _ok_ = _e0_.(map[string]interface{}); !_ok_ { err = errors.New("_list_v0_ error"); return }; if _list_v0_, err = NewPriorityConsume(_x_); err != nil { return } }
                        __x__ = append(__x__, _list_v0_)
                    }
                }
    ; _v.Property = __x__ }}
    { var _ok_ bool; var __json_standard_insight__ interface{}; if __json_standard_insight__, _ok_ = _buf["standard_insight"]; !_ok_ || __json_standard_insight__ == nil { err = errors.New("standard_insight error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_standard_insight__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.StandardInsight = __x__ }}
    { var _ok_ bool; var __json_standard_critical__ interface{}; if __json_standard_critical__, _ok_ = _buf["standard_critical"]; !_ok_ || __json_standard_critical__ == nil { err = errors.New("standard_critical error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_standard_critical__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.StandardCritical = __x__ }}
    return
}

